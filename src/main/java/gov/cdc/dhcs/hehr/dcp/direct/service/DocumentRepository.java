package gov.cdc.dhcs.hehr.dcp.direct.service;

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.util.Assert;

import jakarta.annotation.PostConstruct;

/**
 * 
 * @author Sai Valluripalli
 *
 */
@Component
public class DocumentRepository {
	
	@Value("${init.test.data}")
	private boolean initializeTestData;
	
	@Value("${in-memory.max.size}")
	private int maxSize;

	private static Map<String, String> documentStore;

	public <K, V> Map<String, String> createLRUMap(final int maxEntries) {
		return new LinkedHashMap<String, String>(maxEntries * 10 / 7, 0.7f, false) {
			private static final long serialVersionUID = 1L;

			@Override
			protected boolean removeEldestEntry(Map.Entry<String, String> eldest) {
				return size() > maxEntries;
			}
		};
	}

	@PostConstruct
	public void initData() {
		DocumentRepository.documentStore = createLRUMap(maxSize);
		if(initializeTestData) {
			DocumentRepository.documentStore.put("test",
				"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCEtLSRIZWFkZXI6IC9jdnNyb290L2VieG1scnIvZWJ4bWxyci1zcGVjL21pc2MvMy4wL3NjaGVtYS9ycy54c2QsdiAxLjkgMjAwNS8wMS8zMSAyMjozMzo1NCBmYXJydWtoX25ham1pIEV4cCAkLS0+PHNjaGVtYSB0YXJnZXROYW1lc3BhY2U9InVybjpvYXNpczpuYW1lczp0YzplYnhtbC1yZWdyZXA6eHNkOnJzOjMuMCIgZWxlbWVudEZvcm1EZWZhdWx0PSJxdWFsaWZpZWQiIGF0dHJpYnV0ZUZvcm1EZWZhdWx0PSJ1bnF1YWxpZmllZCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpyaW09InVybjpvYXNpczpuYW1lczp0YzplYnhtbC1yZWdyZXA6eHNkOnJpbTozLjAiIHhtbG5zOnRucz0idXJuOm9hc2lzOm5hbWVzOnRjOmVieG1sLXJlZ3JlcDp4c2Q6cnM6My4wIj4KICA8YW5ub3RhdGlvbj4KICAgIDxkb2N1bWVudGF0aW9uIHhtbDpsYW5nPSJlbiI+VGhlIHNjaGVtYSBmb3IgT0FTSVMgZWJYTUwgUmVnaXN0cnkgU2VydmljZXM8L2RvY3VtZW50YXRpb24+CiAgPC9hbm5vdGF0aW9uPgogIDwhLS1JbXBvcnQgdGhlIHJpbS54c2QgZmlsZSB3aXRoIFhNTCBzY2hlbWEgbWFwcGFpbmcgZnJvbSBSSU0tLT4KICA8aW1wb3J0IG5hbWVzcGFjZT0idXJuOm9hc2lzOm5hbWVzOnRjOmVieG1sLXJlZ3JlcDp4c2Q6cmltOjMuMCIgc2NoZW1hTG9jYXRpb249InJpbS54c2QiLz4KICA8Y29tcGxleFR5cGUgbmFtZT0iUmVnaXN0cnlSZXF1ZXN0VHlwZSI+CiAgICA8YW5ub3RhdGlvbj4KICAgICAgPGRvY3VtZW50YXRpb24geG1sOmxhbmc9ImVuIj5CYXNlIHR5cGUgZm9yIGFsbCBlYlhNTCBSZWdpc3RyeSByZXF1ZXN0czwvZG9jdW1lbnRhdGlvbj4KICAgIDwvYW5ub3RhdGlvbj4KICAgIDxzZXF1ZW5jZT4KICAgICAgPCEtLWV2ZXJ5IHJlcXVlc3QgbWF5IGJlIGV4dGVuZGVkIHVzaW5nIFNsb3RzLi0tPgogICAgICA8ZWxlbWVudCBtYXhPY2N1cnM9IjEiIG1pbk9jY3Vycz0iMCIgbmFtZT0iUmVxdWVzdFNsb3RMaXN0IiB0eXBlPSJyaW06U2xvdExpc3RUeXBlIi8+CiAgICA8L3NlcXVlbmNlPgogICAgPGF0dHJpYnV0ZSBuYW1lPSJpZCIgdHlwZT0iYW55VVJJIiB1c2U9Im9wdGlvbmFsIi8+CiAgICA8IS0tQ29tbWVudCBtYXkgYmUgdXNlZCBieSByZXF1ZXN0b3IgdG8gZGVzY3JpYmUgdGhlIHJlcXVlc3QuIFVzZWQgaW4gVmVyc2lvbkluZm8uY29tbWVudC0tPgogICAgPGF0dHJpYnV0ZSBuYW1lPSJjb21tZW50IiB0eXBlPSJzdHJpbmciIHVzZT0ib3B0aW9uYWwiLz4KICA8L2NvbXBsZXhUeXBlPgogIDxlbGVtZW50IG5hbWU9IlJlZ2lzdHJ5UmVxdWVzdCIgdHlwZT0idG5zOlJlZ2lzdHJ5UmVxdWVzdFR5cGUiLz4KICA8ZWxlbWVudCBuYW1lPSJSZWdpc3RyeUVycm9yTGlzdCI+CiAgICA8YW5ub3RhdGlvbj4KICAgICAgPGRvY3VtZW50YXRpb24geG1sOmxhbmc9ImVuIj5UaGUgUmVnaXN0cnlFcnJvckxpc3QgaXMgZGVyaXZlZCBmcm9tIHRoZSBFcnJvckxpc3QgZWxlbWVudCBmcm9tIHRoZSBlYlhNTCBNZXNzYWdlIFNlcnZpY2UgU3BlY2lmaWNhdGlvbjwvZG9jdW1lbnRhdGlvbj4KICAgIDwvYW5ub3RhdGlvbj4KICAgIDxjb21wbGV4VHlwZT4KICAgICAgPHNlcXVlbmNlPgogICAgICAgIDxlbGVtZW50IG1heE9jY3Vycz0idW5ib3VuZGVkIiByZWY9InRuczpSZWdpc3RyeUVycm9yIi8+CiAgICAgIDwvc2VxdWVuY2U+CiAgICAgIDxhdHRyaWJ1dGUgbmFtZT0iaGlnaGVzdFNldmVyaXR5IiB0eXBlPSJyaW06cmVmZXJlbmNlVVJJIiB1c2U9Im9wdGlvbmFsIi8+CiAgICA8L2NvbXBsZXhUeXBlPgogIDwvZWxlbWVudD4KICA8ZWxlbWVudCBuYW1lPSJSZWdpc3RyeUVycm9yIj4KICAgIDxjb21wbGV4VHlwZT4KICAgICAgPHNpbXBsZUNvbnRlbnQ+CiAgICAgICAgPGV4dGVuc2lvbiBiYXNlPSJzdHJpbmciPgogICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPSJjb2RlQ29udGV4dCIgdHlwZT0ic3RyaW5nIiB1c2U9InJlcXVpcmVkIi8+CiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9ImVycm9yQ29kZSIgdHlwZT0ic3RyaW5nIiB1c2U9InJlcXVpcmVkIi8+CiAgICAgICAgICA8YXR0cmlidXRlIGRlZmF1bHQ9InVybjpvYXNpczpuYW1lczp0YzplYnhtbC1yZWdyZXA6RXJyb3JTZXZlcml0eVR5cGU6RXJyb3IiIG5hbWU9InNldmVyaXR5IiB0eXBlPSJyaW06cmVmZXJlbmNlVVJJIi8+CiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9ImxvY2F0aW9uIiB0eXBlPSJzdHJpbmciIHVzZT0ib3B0aW9uYWwiLz4KICAgICAgICA8L2V4dGVuc2lvbj4KICAgICAgPC9zaW1wbGVDb250ZW50PgogICAgPC9jb21wbGV4VHlwZT4KICA8L2VsZW1lbnQ+CiAgPGNvbXBsZXhUeXBlIG5hbWU9IlJlZ2lzdHJ5UmVzcG9uc2VUeXBlIj4KICAgIDxhbm5vdGF0aW9uPgogICAgICA8ZG9jdW1lbnRhdGlvbiB4bWw6bGFuZz0iZW4iPkJhc2UgdHlwZSBmb3IgYWxsIGViWE1MIFJlZ2lzdHJ5IHJlc3BvbnNlczwvZG9jdW1lbnRhdGlvbj4KICAgIDwvYW5ub3RhdGlvbj4KICAgIDxzZXF1ZW5jZT4KICAgICAgPCEtLWV2ZXJ5IHJlc3BvbnNlIG1heSBiZSBleHRlbmRlZCB1c2luZyBTbG90cy4tLT4KICAgICAgPGVsZW1lbnQgbWF4T2NjdXJzPSIxIiBtaW5PY2N1cnM9IjAiIG5hbWU9IlJlc3BvbnNlU2xvdExpc3QiIHR5cGU9InJpbTpTbG90TGlzdFR5cGUiLz4KICAgICAgPGVsZW1lbnQgbWluT2NjdXJzPSIwIiByZWY9InRuczpSZWdpc3RyeUVycm9yTGlzdCIvPgogICAgPC9zZXF1ZW5jZT4KICAgIDxhdHRyaWJ1dGUgbmFtZT0ic3RhdHVzIiB0eXBlPSJyaW06cmVmZXJlbmNlVVJJIiB1c2U9InJlcXVpcmVkIi8+CiAgICA8IS0taWQgaXMgdGhlIHJlcXVlc3QgaWYgZm9yIHRoZSByZXF1ZXN0IGZvciB3aGljaCB0aGlzIGlzIGEgcmVzcG9uc2UtLT4KICAgIDxhdHRyaWJ1dGUgbmFtZT0icmVxdWVzdElkIiB0eXBlPSJhbnlVUkkiIHVzZT0ib3B0aW9uYWwiLz4KICA8L2NvbXBsZXhUeXBlPgogIDxlbGVtZW50IG5hbWU9IlJlZ2lzdHJ5UmVzcG9uc2UiIHR5cGU9InRuczpSZWdpc3RyeVJlc3BvbnNlVHlwZSIvPgo8L3NjaGVtYT4=");
		}
	}

	public String storeDocument(String documentUniqueId, String data) {
		Assert.notNull(data, "The data must not be null");
		Assert.notNull(documentUniqueId, "The documentUniqueId name must not be null");
		return DocumentRepository.documentStore.put(documentUniqueId.trim().toLowerCase(), data);
	}

	public String findDocument(String homeCommunityId, String repositoryUniqueId, String documentUniqueId) {
//		Assert.notNull(repositoryUniqueId, "The repositoryUniqueId name must not be null");
		Assert.notNull(documentUniqueId, "The documentUniqueId name must not be null");
		return DocumentRepository.documentStore.get(documentUniqueId.trim().toLowerCase());
	}

	public Set<String> getDocumentNameList() {
		return DocumentRepository.documentStore.keySet();
	}

	public void deleteItem(String name) {
		DocumentRepository.documentStore.remove(name);
	}

	public void deleteAll() {
		DocumentRepository.documentStore.clear();
	}
}
